version: '3.8'

services:
  # PostgreSQL for Company A (Main Office)
  postgres-company-a:
    image: postgres:15
    container_name: postgres-company-a
    environment:
      POSTGRES_DB: siamtech_company_a
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_company_a_data:/var/lib/postgresql/data
      - ./init-company-a.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - siamtech_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d siamtech_company_a"]
      interval: 30s
      timeout: 10s
      retries: 5

  # PostgreSQL for Company B (Regional Office)
  postgres-company-b:
    image: postgres:15
    container_name: postgres-company-b
    environment:
      POSTGRES_DB: siamtech_company_b
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    ports:
      - "5433:5432"
    volumes:
      - postgres_company_b_data:/var/lib/postgresql/data
      - ./init-company-b.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - siamtech_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d siamtech_company_b"]
      interval: 30s
      timeout: 10s
      retries: 5

  # PostgreSQL for Company C (International)
  postgres-company-c:
    image: postgres:15
    container_name: postgres-company-c
    environment:
      POSTGRES_DB: siamtech_company_c
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    ports:
      - "5434:5432"
    volumes:
      - postgres_company_c_data:/var/lib/postgresql/data
      - ./init-company-c.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - siamtech_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d siamtech_company_c"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: siamtech-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - siamtech_network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # n8n Workflow Automation (Shared)
  n8n:
    image: n8nio/n8n:latest
    container_name: siamtech-n8n
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=password
      - N8N_HOST=localhost
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=http://localhost:5678
      
      # Multi-tenant database configurations
      - POSTGRES_HOST_COMPANY_A=postgres-company-a
      - POSTGRES_PORT_COMPANY_A=5432
      - POSTGRES_DB_COMPANY_A=siamtech_company_a
      - POSTGRES_USER_COMPANY_A=postgres
      - POSTGRES_PASSWORD_COMPANY_A=password123
      
      - POSTGRES_HOST_COMPANY_B=postgres-company-b
      - POSTGRES_PORT_COMPANY_B=5432
      - POSTGRES_DB_COMPANY_B=siamtech_company_b
      - POSTGRES_USER_COMPANY_B=postgres
      - POSTGRES_PASSWORD_COMPANY_B=password123
      
      - POSTGRES_HOST_COMPANY_C=postgres-company-c
      - POSTGRES_PORT_COMPANY_C=5432
      - POSTGRES_DB_COMPANY_C=siamtech_company_c
      - POSTGRES_USER_COMPANY_C=postgres
      - POSTGRES_PASSWORD_COMPANY_C=password123
      
      # AWS Configuration
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      
      # Knowledge Base (shared with tenant prefixes)
      - KNOWLEDGE_BASE_ID=${KNOWLEDGE_BASE_ID}
      
      # Redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - n8n_data:/home/node/.n8n
      - ./tenant_config.yaml:/home/node/.n8n/tenant_config.yaml:ro
    networks:
      - siamtech_network
    depends_on:
      - postgres-company-a
      - postgres-company-b
      - postgres-company-c
      - redis
    restart: unless-stopped

  # RAG Service (Shared - serves all tenants)
  rag-service:
    build:
      context: .
      dockerfile: Dockerfile.rag
    container_name: siamtech-rag-service
    ports:
      - "5000:5000"
    environment:
      # AWS Configuration
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      
      # Knowledge Base
      - KNOWLEDGE_BASE_ID=${KNOWLEDGE_BASE_ID}
      
      # Multi-tenant database configurations
      - POSTGRES_HOST_COMPANY_A=postgres-company-a
      - POSTGRES_PORT_COMPANY_A=5432
      - POSTGRES_DB_COMPANY_A=siamtech_company_a
      - POSTGRES_USER_COMPANY_A=postgres
      - POSTGRES_PASSWORD_COMPANY_A=password123
      
      - POSTGRES_HOST_COMPANY_B=postgres-company-b
      - POSTGRES_PORT_COMPANY_B=5432
      - POSTGRES_DB_COMPANY_B=siamtech_company_b
      - POSTGRES_USER_COMPANY_B=postgres
      - POSTGRES_PASSWORD_COMPANY_B=password123
      
      - POSTGRES_HOST_COMPANY_C=postgres-company-c
      - POSTGRES_PORT_COMPANY_C=5432
      - POSTGRES_DB_COMPANY_C=siamtech_company_c
      - POSTGRES_USER_COMPANY_C=postgres
      - POSTGRES_PASSWORD_COMPANY_C=password123
      
      # Redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      
      # Tenant Configuration
      - TENANT_CONFIG_FILE=/app/tenant_config.yaml
      - DEFAULT_TENANT=company-a
    volumes:
      - ./tenant_config.yaml:/app/tenant_config.yaml:ro
    networks:
      - siamtech_network
    depends_on:
      - postgres-company-a
      - postgres-company-b
      - postgres-company-c
      - redis
    restart: unless-stopped

  # =============================================================================
  # COMPANY A SERVICES - BANGKOK HQ (Ports 3000-3099)
  # =============================================================================
  
  # OpenWebUI Proxy for Company A
  openwebui-proxy-company-a:
    build:
      context: .
      dockerfile: Dockerfile.proxy
    container_name: siamtech-proxy-company-a
    ports:
      - "8011:8001"
    environment:
      - N8N_BASE_URL=http://n8n:5678
      - TENANT_CONFIG_FILE=/app/tenant_config.yaml
      - DEFAULT_TENANT=company-a
      - FORCE_TENANT=company-a 
      - REQUIRE_TENANT_HEADER=false
    volumes:
      - ./tenant_config.yaml:/app/tenant_config.yaml:ro
    networks:
      - siamtech_network
    depends_on:
      - n8n
      - rag-service
    restart: unless-stopped
    
  # Open WebUI for Company A (Bangkok HQ) - FIXED
  open-webui-company-a:
    image: ghcr.io/open-webui/open-webui:main
    container_name: siamtech-webui-company-a
    ports:
      - "3000:8080"
    environment:
      # ✅ ใช้ proxy ที่ถูกต้อง
      - OPENAI_API_BASE_URL=http://openwebui-proxy-company-a:8001/v1
      - OPENAI_API_KEY=sk-company-a
      - WEBUI_NAME=SiamTech Bangkok HQ - AI Assistant
      - WEBUI_URL=http://localhost:3000
      - DEFAULT_USER_ROLE=user
      - ENABLE_SIGNUP=true
      - SHOW_ADMIN_DETAILS=false
    volumes:
      - open-webui-company-a-data:/app/backend/data
    networks:
      - siamtech_network
    depends_on:
      - openwebui-proxy-company-a
    restart: unless-stopped

  # =============================================================================
  # COMPANY B SERVICES - CHIANG MAI REGIONAL (Ports 3100-3199) - FIXED
  # =============================================================================
  
  # OpenWebUI Proxy for Company B
  openwebui-proxy-company-b:
    build:
      context: .
      dockerfile: Dockerfile.proxy
    container_name: siamtech-proxy-company-b
    ports:
      - "8101:8001"
    environment:
      - N8N_BASE_URL=http://n8n:5678
      - TENANT_CONFIG_FILE=/app/tenant_config.yaml
      - DEFAULT_TENANT=company-b
      - FORCE_TENANT=company-b 
      - REQUIRE_TENANT_HEADER=false
    volumes:
      - ./tenant_config.yaml:/app/tenant_config.yaml:ro
    networks:
      - siamtech_network
    depends_on:
      - n8n
      - rag-service
    restart: unless-stopped
    
  # Open WebUI for Company B (Chiang Mai) - FIXED
  open-webui-company-b:
    image: ghcr.io/open-webui/open-webui:main
    container_name: siamtech-webui-company-b
    ports:
      - "3100:8080"
    environment:
      # ✅ แก้ไขแล้ว: ใช้ proxy แทน rag-service
      - OPENAI_API_BASE_URL=http://openwebui-proxy-company-b:8001/v1
      - OPENAI_API_KEY=sk-company-b
      - WEBUI_NAME=SiamTech Chiang Mai - AI Assistant
      - WEBUI_URL=http://localhost:3100
      - DEFAULT_USER_ROLE=user
      - ENABLE_SIGNUP=true
      - SHOW_ADMIN_DETAILS=false
      # ❌ ลบ X_TENANT_ID เพราะ proxy จัดการให้แล้ว
    volumes:
      - open-webui-company-b-data:/app/backend/data
    networks:
      - siamtech_network
    depends_on:
      # ✅ แก้ไขแล้ว: ขึ้นอยู่กับ proxy แทน rag-service
      - openwebui-proxy-company-b
    restart: unless-stopped

  # =============================================================================
  # COMPANY C SERVICES - INTERNATIONAL (Ports 3200-3299) - FIXED
  # =============================================================================
  
  # OpenWebUI Proxy for Company C
  openwebui-proxy-company-c:
    build:
      context: .
      dockerfile: Dockerfile.proxy
    container_name: siamtech-proxy-company-c
    ports:
      - "8201:8001"
    environment:
      - N8N_BASE_URL=http://n8n:5678
      - TENANT_CONFIG_FILE=/app/tenant_config.yaml
      - DEFAULT_TENANT=company-c
      - FORCE_TENANT=company-c
      - REQUIRE_TENANT_HEADER=false
    volumes:
      - ./tenant_config.yaml:/app/tenant_config.yaml:ro
    networks:
      - siamtech_network
    depends_on:
      - n8n
      - rag-service
    restart: unless-stopped
    
  # Open WebUI for Company C (International) - FIXED
  open-webui-company-c:
    image: ghcr.io/open-webui/open-webui:main
    container_name: siamtech-webui-company-c
    ports:
      - "3200:8080"
    environment:
      # ✅ แก้ไขแล้ว: ใช้ proxy แทน rag-service
      - OPENAI_API_BASE_URL=http://openwebui-proxy-company-c:8001/v1
      - OPENAI_API_KEY=sk-company-c
      - WEBUI_NAME=SiamTech International - AI Assistant
      - WEBUI_URL=http://localhost:3200
      - DEFAULT_USER_ROLE=user
      - ENABLE_SIGNUP=true
      - SHOW_ADMIN_DETAILS=false
      # ❌ ลบ X_TENANT_ID เพราะ proxy จัดการให้แล้ว
    volumes:
      - open-webui-company-c-data:/app/backend/data
    networks:
      - siamtech_network
    depends_on:
      # ✅ แก้ไขแล้ว: ขึ้นอยู่กับ proxy แทน rag-service
      - openwebui-proxy-company-c
    restart: unless-stopped

  # =============================================================================
  # MONITORING & ADMIN SERVICES (Ports 9000+)
  # =============================================================================

  # Admin Dashboard (All companies overview)
  admin-dashboard:
    image: nginx:alpine
    container_name: siamtech-admin-dashboard
    ports:
      - "9000:80"
    volumes:
      - ./admin-dashboard:/usr/share/nginx/html:ro
    networks:
      - siamtech_network
    restart: unless-stopped

volumes:
  # Database volumes (separated by tenant)
  postgres_company_a_data:
    driver: local
  postgres_company_b_data:
    driver: local
  postgres_company_c_data:
    driver: local
  
  # Application volumes (separated by company)
  open-webui-company-a-data:
    driver: local
  open-webui-company-b-data:
    driver: local
  open-webui-company-c-data:
    driver: local
  
  # Shared volumes
  redis_data:
    driver: local
  n8n_data:
    driver: local

networks:
  siamtech_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16