# =============================================================================
# Docker Compose for Siamtemp HVAC AI System with N8N Integration
# Version: 6.0 - Fixed Structure
# =============================================================================

services:
  # =============================================================================
  # DATABASE SERVICE
  # =============================================================================
  
  postgres-company-a:
    image: postgres:15-alpine
    container_name: postgres-company-a
    environment:
      POSTGRES_DB: siamtemp_company_a
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_company_a_data:/var/lib/postgresql/data
    networks:
      - hvac_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d siamtemp_company_a"]
      interval: 30s
      timeout: 10s
      retries: 5

  # =============================================================================
  # REDIS CACHE SERVICE (แยกออกมาให้ถูกต้อง)
  # =============================================================================
  
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - hvac_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # =============================================================================
  # MAIN HVAC AI SERVICE
  # =============================================================================
  
  hvac-ai-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hvac-ai-service
    environment:
      # Database Configuration
      - DB_HOST=postgres-company-a
      - DB_PORT=5432
      - DB_NAME=siamtemp_company_a
      - DB_USER=postgres
      - DB_PASSWORD=password123
      
      # External Ollama Server
      - OLLAMA_BASE_URL=http://52.74.36.160:12434
      - OLLAMA_TIMEOUT=60
      - SQL_MODEL=llama3.1:8b
      - NL_MODEL=qwen2.5:7b-instruct
      
      # Redis Cache
      - REDIS_URL=redis://redis:6379
      - ENABLE_CACHING=true
      - CACHE_TTL=3600
      
      # Feature Flags
      - ENABLE_MEMORY=true
      - ENABLE_PARALLEL=true
      - ENABLE_CLEANING=true
      - ENABLE_VALIDATION=true
      - LOG_LEVEL=INFO
      
    ports:
      - "5000:5000"
    networks:
      - hvac_network
    depends_on:
      postgres-company-a:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # =============================================================================
  # OPENWEBUI PROXY SERVICE (With N8N Support)
  # =============================================================================
  
  openwebui-proxy:
    build:
      context: .
      dockerfile: Dockerfile.proxy
    container_name: openwebui-proxy
    environment:
      # Main service
      - MAIN_SERVICE_URL=http://hvac-ai-service:5000
      - DEFAULT_TENANT=company-a
      - PROXY_PORT=8001
      
      # ========== เพิ่ม n8n Configuration ==========
      - USE_N8N_WORKFLOW=true 
      - N8N_BASE_URL=http://13.250.235.228:5678
      - N8N_TIMEOUT=60
      - N8N_FALLBACK_TO_DIRECT=true
      - N8N_WEBHOOK_PATH=webhook/siamtemp-chat
    ports:
      - "8001:8001"
    networks:
      - hvac_network
    depends_on:
      - hvac-ai-service
    restart: unless-stopped


# =============================================================================
# VOLUMES
# =============================================================================

volumes:
  postgres_company_a_data:
    driver: local
  redis_data:
    driver: local

# =============================================================================
# NETWORK
# =============================================================================

networks:
  hvac_network:
    driver: bridge
    name: hvac_network